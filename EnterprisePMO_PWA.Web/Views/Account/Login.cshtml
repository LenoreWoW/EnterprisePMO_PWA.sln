@{
    ViewData["Title"] = "Login";
    Layout = "_Layout";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white text-center py-3">
                    <h4 class="mb-0">
                        <i class="bi bi-shield-lock me-2"></i>Login to Enterprise PMO
                    </h4>
                </div>
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        <img src="/icons/icon-192.jpg" alt="Enterprise PMO Logo" width="80" class="mb-3">
                        <p class="text-muted">Please sign in to continue</p>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>@ViewBag.ErrorMessage
                        </div>
                    }
                    
                    <form id="loginForm" method="post" action="/api/auth/login">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                <input type="email" class="form-control" id="email" name="email" required placeholder="Enter your email">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-key"></i></span>
                                <input type="password" class="form-control" id="password" name="password" required placeholder="Enter your password">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="rememberMe" name="rememberMe">
                            <label class="form-check-label" for="rememberMe">Remember me</label>
                        </div>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                            </button>
                        </div>
                    </form>
                    
                    <div class="text-center mt-3">
                        <a href="/Account/ForgotPassword" class="text-decoration-none">Forgot password?</a>
                    </div>
                </div>
                <div class="card-footer bg-light text-center py-3">
                    <span>Don't have an account? </span>
                    <a href="/Account/Signup" class="text-decoration-none">Sign up</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle password visibility
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('password');
            
            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                
                // Toggle eye icon
                const eyeIcon = this.querySelector('i');
                eyeIcon.classList.toggle('bi-eye');
                eyeIcon.classList.toggle('bi-eye-slash');
            });
            
            // Submit form through AJAX
            const loginForm = document.getElementById('loginForm');
            
            loginForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(loginForm);
                const jsonData = {};
                
                formData.forEach((value, key) => {
                    jsonData[key] = value;
                });
                
                fetch('/api/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(jsonData)
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.message || 'Invalid login attempt');
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    // Redirect to dashboard on success
                    window.location.href = '/Dashboard';
                })
                .catch(error => {
                    // Show error message
                    const errorDiv = document.createElement('div');
                    errorDiv.className = 'alert alert-danger mt-3';
                    errorDiv.innerHTML = `<i class="bi bi-exclamation-triangle-fill me-2"></i>${error.message}`;
                    
                    // Remove any existing error alert
                    const existingAlert = loginForm.querySelector('.alert');
                    if (existingAlert) {
                        existingAlert.remove();
                    }
                    
                    loginForm.insertBefore(errorDiv, loginForm.firstChild);
                });
            });
        });
    </script>
}