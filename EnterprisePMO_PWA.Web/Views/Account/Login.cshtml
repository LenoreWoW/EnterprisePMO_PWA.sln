@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="login-container">
    <div class="row justify-content-center">
        <div class="col-lg-5">
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h2 class="font-weight-light my-2">Enterprise PMO</h2>
                    <h4 class="mb-0">Welcome Back</h4>
                </div>
                <div class="card-body p-4">
                    <div id="message-container"></div>
                    
                    <form id="loginForm" class="needs-validation" novalidate>
                        <div class="form-floating mb-3">
                            <input class="form-control" id="email" name="email" type="email" placeholder="name@example.com" required autofocus />
                            <label for="email">Email address</label>
                            <div class="invalid-feedback">Please enter a valid email address.</div>
                        </div>
                        <div class="form-floating mb-3">
                            <div class="input-group">
                                <input class="form-control" id="password" name="password" type="password" placeholder="Password" required />
                                <button id="togglePassword" class="btn btn-outline-secondary" type="button">
                                    <i class="bi bi-eye-slash"></i>
                                </button>
                            </div>
                            <label for="password">Password</label>
                            <div class="invalid-feedback">Please enter your password.</div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="form-check">
                                <input class="form-check-input" id="rememberMe" name="rememberMe" type="checkbox" />
                                <label class="form-check-label" for="rememberMe">Remember me</label>
                            </div>
                            <a class="small text-primary" href="/Account/ForgotPassword">Forgot Password?</a>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary py-3 fw-bold" type="submit">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Login
                            </button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center py-3 bg-light">
                    <div class="small">Need an account? <a href="/Account/Signup" class="text-primary">Sign up now</a></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('loginForm');
            const messageContainer = document.getElementById('message-container');
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('password');
            
            // Toggle password visibility
            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                togglePassword.querySelector('i').classList.toggle('bi-eye');
                togglePassword.querySelector('i').classList.toggle('bi-eye-slash');
            });
            
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                
                if (!form.checkValidity()) {
                    event.stopPropagation();
                    form.classList.add('was-validated');
                    return;
                }
                
                // Show loading state
                const submitBtn = form.querySelector('button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Logging in...';
                submitBtn.disabled = true;
                
                // Get form data
                const formData = new FormData(form);
                const email = formData.get('email');
                const password = formData.get('password');
                const rememberMe = formData.get('rememberMe') === 'on';
                
                // Send login request
                fetch('/api/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password, rememberMe })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Save token if needed
                        if (data.token) {
                            localStorage.setItem('auth_token', data.token);
                        }
                        
                        // Redirect to dashboard
                        window.location.href = '/Dashboard/Index';
                    } else {
                        // Display error message
                        messageContainer.innerHTML = `
                            <div class="alert alert-danger" role="alert">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i>${data.message || 'Invalid email or password'}
                            </div>
                        `;
                        
                        // Reset button
                        submitBtn.innerHTML = originalBtnText;
                        submitBtn.disabled = false;
                    }
                })
                .catch(error => {
                    // Display error message
                    messageContainer.innerHTML = `
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>An error occurred. Please try again later.
                        </div>
                    `;
                    console.error('Error:', error);
                    
                    // Reset button
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                });
            });
        });
    </script>
    
    <style>
        .login-container {
            min-height: calc(100vh - 160px);
            display: flex;
            align-items: center;
        }
        
        .card {
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;
        }
        
        .btn-primary {
            transition: all 0.2s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .form-floating label {
            color: #6c757d;
        }
        
        .form-control:focus {
            border-color: #0078D7;
            box-shadow: 0 0 0 0.25rem rgba(0, 120, 215, 0.25);
        }
        
        .card-header {
            border-bottom: none;
        }
        
        .form-check-input:checked {
            background-color: #0078D7;
            border-color: #0078D7;
        }
    </style>
}