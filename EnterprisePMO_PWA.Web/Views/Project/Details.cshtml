@model EnterprisePMO_PWA.Domain.Entities.Project
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Project Details";
    var userRole = User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "Guest";
}

<div class="container-fluid py-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Project/List">Projects</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">@Model.Name</h1>
        <div class="d-flex">
            @if (User.IsInRole("ProjectManager"))
            {
                <a href="/Project/Edit/@Model.Id" class="btn btn-primary me-2">
                    <i class="bi bi-pencil me-2"></i>Edit
                </a>
            }
            <a href="/Project/List" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Back to List
            </a>
        </div>
    </div>

    <!-- React Component Root - This will be replaced with the React component tree -->
    <div id="project-details-root" data-project-id="@Model.Id" data-user-role="@userRole"></div>
</div>

@section Scripts {
    <!-- Load React and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.production.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.production.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/prop-types@15.8.1/prop-types.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/recharts@2.7.2/umd/Recharts.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/lucide-react@0.263.1/dist/umd/lucide-react.min.js"></script>
    
    <!-- Load project components bundle -->
    <script src="~/js/components/project-components-bundle.js"></script>
    
    <!-- Initialize the React components -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const rootElement = document.getElementById('project-details-root');
            const projectId = rootElement.getAttribute('data-project-id');
            const userRole = rootElement.getAttribute('data-user-role');
            
            // Render the ProjectDetailsView component
            ReactDOM.render(
                React.createElement(EnterprisePMO.ProjectDetailsView, {
                    projectId: projectId,
                    userRole: userRole
                }),
                rootElement
            );
        });
    </script>
}