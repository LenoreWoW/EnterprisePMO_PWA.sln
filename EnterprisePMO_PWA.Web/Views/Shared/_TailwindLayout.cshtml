@{
    var isAuthPage = Context.Request.Path.StartsWithSegments("/Account") && 
                    !Context.Request.Path.StartsWithSegments("/Account/Profile") && 
                    !Context.Request.Path.StartsWithSegments("/Account/Settings");
}
<!DOCTYPE html>
<html lang="en" class="h-full bg-gray-50">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Enterprise PMO</title>
    
    <!-- Tailwind CSS -->
    <link rel="stylesheet" href="~/css/site.min.css" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    
    <!-- PWA -->
    <link rel="manifest" href="~/manifest.json" />
    
    <!-- Custom Styles -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        
        /* Auth page background style */
        .auth-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('https://images.unsplash.com/photo-1557683316-973673baf926?ixlib=rb-4.0.3&auto=format&fit=crop&w=2282&q=80');
            background-size: cover;
            background-position: center;
            opacity: 0.05;
            z-index: -1;
        }
    </style>
    
    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="h-full" data-authenticated="false">
    @if (isAuthPage) {
        <!-- Auth page background -->
        <div class="auth-background"></div>
    }

    <div class="min-h-full flex flex-col">
        <!-- Header -->
        <header class="bg-white shadow-sm">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between h-16">
                    <div class="flex">
                        <!-- Logo -->
                        <div class="flex-shrink-0 flex items-center">
                            <a href="/" class="text-xl font-semibold text-blue-600">
                                <i class="bi bi-kanban me-2"></i>Enterprise PMO
                            </a>
                        </div>
                        
                        <!-- Navigation links - Only shown when not on auth pages -->
                        @if (!isAuthPage) {
                            <nav class="hidden md:ml-6 md:flex md:space-x-8 nav-items" style="display: none;">
                                <a href="/Dashboard" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                                    Dashboard
                                </a>
                                <a href="/Project/List" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                                    Projects
                                </a>
                                <a href="/ChangeRequests/List" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                                    Change Requests
                                </a>
                                <a href="/Reports" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                                    Reports
                                </a>
                            </nav>
                        }
                    </div>

                    <!-- Only shown when not on auth pages -->
                    @if (!isAuthPage) {
                        <!-- Separator -->
                        <div class="h-6 w-px bg-gray-200 lg:hidden" aria-hidden="true"></div>

                        <!-- Breadcrumb -->
                        <nav class="flex" aria-label="Breadcrumb">
                            <ol role="list" class="flex items-center space-x-2">
                                <li>
                                    <div class="flex">
                                        <a href="/" class="text-sm font-medium text-gray-500 hover:text-gray-700">Home</a>
                                    </div>
                                </li>
                                @if (ViewContext.RouteData.Values["controller"] != null && ViewContext.RouteData.Values["controller"].ToString() != "Home")
                                {
                                    <li>
                                        <div class="flex items-center">
                                            <svg class="h-5 w-5 flex-shrink-0 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                                            </svg>
                                            <a href="/@ViewContext.RouteData.Values["controller"]" class="ml-2 text-sm font-medium text-gray-500 hover:text-gray-700">@ViewContext.RouteData.Values["controller"]</a>
                                        </div>
                                    </li>
                                }
                                @if (ViewContext.RouteData.Values["action"] != null && ViewContext.RouteData.Values["action"].ToString() != "Index")
                                {
                                    <li>
                                        <div class="flex items-center">
                                            <svg class="h-5 w-5 flex-shrink-0 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                                            </svg>
                                            <span class="ml-2 text-sm font-medium text-gray-500 hover:text-gray-700" aria-current="page">@ViewContext.RouteData.Values["action"]</span>
                                        </div>
                                    </li>
                                }
                            </ol>
                        </nav>

                        <div class="flex flex-1 justify-end items-center gap-x-4 self-stretch lg:gap-x-6">
                            <!-- Search -->
                            <div class="relative flex flex-1 ml-auto max-w-xs lg:max-w-md">
                                <label for="search" class="sr-only">Search</label>
                                <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                    <svg class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                        <path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                                <input id="search" name="search" class="block w-full rounded-md border-0 bg-white py-1.5 pl-10 pr-3 text-sm text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-500 sm:leading-6" placeholder="Search projects..." type="search">
                            </div>

                            <!-- Notifications dropdown - Only shown when authenticated -->
                            <div class="nav-auth-item" x-data="{ notificationsOpen: false }" style="display: none;">
                                <button type="button" class="relative rounded-full bg-white p-1.5 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500" @click="notificationsOpen = !notificationsOpen">
                                    <span class="sr-only">View notifications</span>
                                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
                                    </svg>
                                    <!-- Notification badge -->
                                    <span id="notificationBadge" class="absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-600 rounded-full" style="display: none;">0</span>
                                </button>
                                
                                <!-- Notifications dropdown panel -->
                                <div x-show="notificationsOpen" 
                                     @click.away="notificationsOpen = false"
                                     x-transition:enter="transition ease-out duration-100"
                                     x-transition:enter-start="transform opacity-0 scale-95"
                                     x-transition:enter-end="transform opacity-100 scale-100"
                                     x-transition:leave="transition ease-in duration-75"
                                     x-transition:leave-start="transform opacity-100 scale-100"
                                     x-transition:leave-end="transform opacity-0 scale-95"
                                     class="absolute right-0 z-10 mt-2 w-80 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" 
                                     x-cloak>
                                    <div class="px-4 py-2 border-b border-gray-100">
                                        <div class="flex justify-between items-center">
                                            <h3 class="text-sm font-medium text-gray-900">Notifications</h3>
                                            <button type="button" class="text-xs text-blue-600 hover:text-blue-800" @click="markAllAsRead()">Mark all as read</button>
                                        </div>
                                    </div>
                                    <div id="notifications-container" class="max-h-60 overflow-y-auto">
                                        <!-- Notifications will be populated here -->
                                        <div class="px-4 py-3 text-center text-sm text-gray-500">
                                            No new notifications
                                        </div>
                                    </div>
                                    <div class="border-t border-gray-100 py-2 px-4 text-center">
                                        <a href="/Notifications" class="text-xs text-blue-600 hover:text-blue-800">View all notifications</a>
                                    </div>
                                </div>
                            </div>

                            <!-- Profile dropdown - Only shown when authenticated -->
                            <div class="nav-auth-item relative" x-data="{ userMenuOpen: false }" style="display: none;">
                                <button type="button" class="flex items-center gap-x-4 text-sm font-semibold leading-6 text-gray-900" @click="userMenuOpen = !userMenuOpen">
                                    <span class="hidden lg:flex lg:items-center">
                                        <span aria-hidden="true" class="current-username">User</span>
                                        <svg class="ml-2 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                                        </svg>
                                    </span>
                                    <span class="inline-block h-8 w-8 overflow-hidden rounded-full bg-gray-100">
                                        <svg class="h-full w-full text-gray-500" fill="currentColor" viewBox="0 0 24 24">
                                            <path d="M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z" />
                                        </svg>
                                    </span>
                                </button>
                                
                                <!-- User menu dropdown -->
                                <div x-show="userMenuOpen" 
                                     @click.away="userMenuOpen = false"
                                     x-transition:enter="transition ease-out duration-100"
                                     x-transition:enter-start="transform opacity-0 scale-95"
                                     x-transition:enter-end="transform opacity-100 scale-100"
                                     x-transition:leave="transition ease-in duration-75"
                                     x-transition:leave-start="transform opacity-100 scale-100"
                                     x-transition:leave-end="transform opacity-0 scale-95"
                                     class="absolute right-0 z-10 mt-2.5 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" 
                                     x-cloak>
                                    <div class="px-4 py-2 text-sm text-gray-500 border-b">
                                        Signed in as <span class="font-medium text-gray-900 current-username">User</span>
                                    </div>
                                    <a href="/Account/Profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Your Profile</a>
                                    <a href="/Account/Settings" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Settings</a>
                                    <form id="logoutForm" action="/api/auth/logout" method="post" class="border-t">
                                        <button type="submit" class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Sign out</button>
                                    </form>
                                </div>
                            </div>

                            <!-- Login/Register buttons (for non-authenticated users) -->
                            <div class="nav-no-auth-item flex items-center gap-2">
                                <a href="/Account/Login" class="text-sm font-medium text-gray-700 hover:text-blue-600">Log in</a>
                                <a href="/Account/Signup" class="ml-2 inline-flex items-center justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600">Sign up</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </header>

        <!-- Main content area -->
        <main class="py-6 px-4 sm:px-6 lg:px-8 flex-grow">
            @RenderBody()
        </main>

        <!-- Footer -->
        <footer class="bg-white border-t border-gray-200 mt-auto">
            <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                <div class="py-6 md:flex md:items-center md:justify-between">
                    <div class="text-center md:text-left">
                        <p class="text-sm text-gray-500">&copy; @DateTime.Now.Year Enterprise PMO. All rights reserved.</p>
                    </div>
                    <div class="mt-4 flex items-center justify-center md:mt-0">
                        <a href="/Home/Privacy" class="text-sm text-gray-500 hover:text-gray-600 mr-4">Privacy</a>
                        <a href="/Home/Terms" class="text-sm text-gray-500 hover:text-gray-600">Terms</a>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    
    <!-- Notification toast container -->
    <div id="toast-container" class="fixed bottom-0 right-0 p-4 z-50"></div>

    <!-- Alpine.js for dropdowns and other interactivity -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    
    <!-- Main Auth JS -->
    <script src="~/js/auth.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    @await RenderSectionAsync("Scripts", required: false)
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize auth state
            if (window.authManager) {
                // Initialize the auth UI based on token
                window.authManager.updateAuthUI(window.authManager.isAuthenticated());
                
                // Add auth token to all links with data-requires-auth
                if (window.authManager.isAuthenticated()) {
                    const authLinks = document.querySelectorAll('[data-requires-auth="true"]');
                    const token = window.authManager.getToken();
                    
                    if (authLinks.length && token) {
                        authLinks.forEach(link => {
                            if (!link.href.includes('auth_token=')) {
                                const url = new URL(link.href, window.location.origin);
                                url.searchParams.set('auth_token', token);
                                link.href = url.toString();
                            }
                        });
                    }
                    
                    // Show/hide admin items based on user role
                    const currentUser = window.authManager.getCurrentUser();
                    if (currentUser && (currentUser.role === "Admin" || currentUser.role === "MainPMO")) {
                        document.querySelectorAll('.admin-only').forEach(el => {
                            el.style.display = '';
                        });
                    } else {
                        document.querySelectorAll('.admin-only').forEach(el => {
                            el.style.display = 'none';
                        });
                    }
                }
            }
        });
    </script>
</body>
</html>